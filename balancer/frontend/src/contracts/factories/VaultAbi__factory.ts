/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type { VaultAbi, VaultAbiInterface } from "../VaultAbi";
const _abi = [
  {
    type: "function",
    name: "register_tokens",
    inputs: [
      {
        type: "b256",
        name: "poolId",
      },
      {
        type: "u64",
        name: "specialization",
      },
      {
        type: "[_; 8]",
        name: "tokens1",
        components: [
          {
            type: "b256",
            name: "__array_element",
          },
        ],
      },
      {
        type: "[_; 8]",
        name: "assetManagers1",
        components: [
          {
            type: "b256",
            name: "__array_element",
          },
        ],
      },
    ],
    outputs: [
      {
        type: "()",
        name: "",
        components: [],
      },
    ],
  },
  {
    type: "function",
    name: "register_pool",
    inputs: [
      {
        type: "b256",
        name: "poolId",
      },
    ],
    outputs: [
      {
        type: "b256",
        name: "",
      },
    ],
  },
];

export class VaultAbi__factory {
  static readonly abi = _abi;
  static createInterface(): VaultAbiInterface {
    return new Interface(_abi) as unknown as VaultAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: Wallet | Provider
  ): VaultAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as VaultAbi;
  }
}
